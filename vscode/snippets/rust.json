{
    "snippets main": {
        "prefix": "main",
        "body": [
            "fn main() {",
            "\t$0",
            "}\n"
        ],
        "description": ""
    },
    "snippets tokio main": {
        "prefix": "tokio main",
        "body": [
            "#[tokio::main]",
            "async fn main() {",
            "\t$0",
            "}\n"
        ],
        "description": ""
    },
    "snippets allow": {
        "prefix": "allow",
        "body": [
            "#[allow($0)]"
        ],
        "description": ""
    },
    "snippets mod tests": {
        "prefix": "mod tests",
        "body": [
            "#[cfg(test)]",
            "mod tests {",
            "\tuse super::*;\n",
            "\t#[test]",
            "\tfn tests() {\n\t\t$0",
            "\t}",
            "}"
        ],
        "description": ""
    },
    "snippets greek alphabet": {
		"prefix": "greek alphabet",
		"body":[
			"let alphabet = vec![",
			"\t\"alpha\", \"bata\", \"gamma\", \"delta\", \"epsilon\", \"zeta\", \"eta\", \"theta\", \"iota\", \"kappa\",",
			"\t\"lambda\", \"mu\", \"nu\", \"xi\", \"omicron\", \"pi\", \"rho\", \"sigma\", \"tau\", \"upsilon\", \"phi\",",
			"\t\"chi\", \"psi\", \"omega\",",
			"];\n"
		],
		"description": ""
	},
    "snippets leetcode": {
        "prefix": "leetcode",
        "body": [
            "#![allow(dead_code)]\n",
            "fn main() {}\n",
            "struct Solution {}\n",
            "impl Solution{\n\t$0",
            "}\n",
            "#[cfg(test)]",
            "mod tests {",
            "\tuse super::*;\n",
            "\t#[test]",
            "\tfn tests() {",
            "\t}",
            "}"
        ],
        "description": ""
    }
}